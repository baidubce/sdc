/*
 * 千帆SDK
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Baiducloud.SDK.Client.FileParameter;
using OpenAPIDateConverter = Baiducloud.SDK.Client.OpenAPIDateConverter;
using Baiducloud.SDK.Client;

namespace Baiducloud.SDK.Model.Qianfan
{
    /// <summary>
    /// Usage
    /// </summary>
    [DataContract(Name = "Usage")]
    public partial class Usage : IEquatable<Usage>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Usage" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected Usage() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="Usage" /> class.
        /// </summary>
        /// <param name="promptTokens">问题tokens数.</param>
        /// <param name="completionTokens">回答tokens数.</param>
        /// <param name="totalTokens">tokens总数.</param>
        public Usage(int promptTokens = default(int), int completionTokens = default(int), int totalTokens = default(int))
        {
            this.PromptTokens = promptTokens;
            this.CompletionTokens = completionTokens;
            this.TotalTokens = totalTokens;
        }

        /// <summary>
        /// 问题tokens数
        /// </summary>
        /// <value>问题tokens数</value>
        [DataMember(Name = "prompt_tokens", EmitDefaultValue = false)]
        public int PromptTokens { get; set; }

        /// <summary>
        /// 回答tokens数
        /// </summary>
        /// <value>回答tokens数</value>
        [DataMember(Name = "completion_tokens", EmitDefaultValue = false)]
        public int CompletionTokens { get; set; }

        /// <summary>
        /// tokens总数
        /// </summary>
        /// <value>tokens总数</value>
        [DataMember(Name = "total_tokens", EmitDefaultValue = false)]
        public int TotalTokens { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Usage {\n");
            sb.Append("  PromptTokens: ").Append(PromptTokens).Append("\n");
            sb.Append("  CompletionTokens: ").Append(CompletionTokens).Append("\n");
            sb.Append("  TotalTokens: ").Append(TotalTokens).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Usage);
        }

        /// <summary>
        /// Returns true if Usage instances are equal
        /// </summary>
        /// <param name="input">Instance of Usage to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Usage input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.PromptTokens == input.PromptTokens ||
                    this.PromptTokens.Equals(input.PromptTokens)
                ) && 
                (
                    this.CompletionTokens == input.CompletionTokens ||
                    this.CompletionTokens.Equals(input.CompletionTokens)
                ) && 
                (
                    this.TotalTokens == input.TotalTokens ||
                    this.TotalTokens.Equals(input.TotalTokens)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.PromptTokens.GetHashCode();
                hashCode = (hashCode * 59) + this.CompletionTokens.GetHashCode();
                hashCode = (hashCode * 59) + this.TotalTokens.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
