/*
 * 千帆SDK
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.baidubce.sdc.sdk.model.qianfan;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets ChatLlmEnum
 */
@JsonAdapter(ChatLlmEnum.Adapter.class)
public enum ChatLlmEnum {
  
  ERNIE_Bot_4("completions_pro"),
  
  ERNIE_Bot_8k("ernie_bot_8k"),
  
  ERNIE_Bot("completions"),
  
  ERNIE_Bot_turbo("eb-instant"),
  
  ERNIE_Bot_turbo_AI("ai_apaas"),
  
  Yi_34B_Chat("yi_34b_chat"),
  
  BLOOMZ_7B("bloomz_7b1"),
  
  Qianfan_BLOOMZ_7B_compressed("qianfan_bloomz_7b_compressed"),
  
  Llama_2_7b_chat("llama_2_7b"),
  
  Llama_2_13b_chat("llama_2_13b"),
  
  Llama_2_70b_chat("llama_2_70b"),
  
  Qianfan_Chinese_Llama_2_7B("qianfan_chinese_llama_2_7b"),
  
  Qianfan_Chinese_Llama_2_13B("qianfan_chinese_llama_2_13b"),
  
  ChatGLM2_6B_32K("chatglm2_6b_32k"),
  
  XuanYuan_70B_Chat_4bit("xuanyuan_70b_chat"),
  
  ChatLaw("chatlaw"),
  
  AquilaChat_7B("aquilachat_7b");

  private String value;

  ChatLlmEnum(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static ChatLlmEnum fromValue(String value) {
    for (ChatLlmEnum b : ChatLlmEnum.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<ChatLlmEnum> {
    @Override
    public void write(final JsonWriter jsonWriter, final ChatLlmEnum enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public ChatLlmEnum read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return ChatLlmEnum.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    ChatLlmEnum.fromValue(value);
  }
}

