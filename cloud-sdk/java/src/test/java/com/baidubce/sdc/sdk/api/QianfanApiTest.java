/*
 * 千帆SDK
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.baidubce.sdc.sdk.api;

import com.baidubce.sdc.sdk.ApiException;
import com.baidubce.sdc.sdk.model.qianfan.ChatLlm;
import com.baidubce.sdc.sdk.model.qianfan.ChatRequest;
import com.baidubce.sdc.sdk.model.qianfan.ChatResponse;
import com.baidubce.sdc.sdk.model.qianfan.CompletionLlm;
import com.baidubce.sdc.sdk.model.qianfan.CompletionRequest;
import com.baidubce.sdc.sdk.model.qianfan.CompletionResponse;
import com.baidubce.sdc.sdk.model.qianfan.EmbeddingLlm;
import com.baidubce.sdc.sdk.model.qianfan.EmbeddingRequest;
import com.baidubce.sdc.sdk.model.qianfan.EmbeddingResponse;
import com.baidubce.sdc.sdk.model.qianfan.ImageLlm;
import com.baidubce.sdc.sdk.model.qianfan.ImageRequest;
import com.baidubce.sdc.sdk.model.qianfan.ImageResponse;
import com.baidubce.sdc.sdk.model.qianfan.PluginRequest;
import com.baidubce.sdc.sdk.model.qianfan.PluginResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for QianfanApi
 */
@Disabled
public class QianfanApiTest {

    private final QianfanApi api = new QianfanApi();

    /**
     * 调用对话类大模型
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void chatTest() throws ApiException {
        ChatLlm llm = null;
        ChatRequest chatRequest = null;
        ChatResponse response = api.chat(llm, chatRequest);
        // TODO: test validations
    }

    /**
     * 调用续写类大模型
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void completionTest() throws ApiException {
        CompletionLlm llm = null;
        CompletionRequest completionRequest = null;
        CompletionResponse response = api.completion(llm, completionRequest);
        // TODO: test validations
    }

    /**
     * 调用支持向量计算类的大模型接口
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void embeddingTest() throws ApiException {
        EmbeddingLlm llm = null;
        EmbeddingRequest embeddingRequest = null;
        EmbeddingResponse response = api.embedding(llm, embeddingRequest);
        // TODO: test validations
    }

    /**
     * 调用插件接口
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pluginTest() throws ApiException {
        String serverPath = null;
        PluginRequest pluginRequest = null;
        PluginResponse response = api.plugin(serverPath, pluginRequest);
        // TODO: test validations
    }

    /**
     * 调用文生图类大模型
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void text2imageTest() throws ApiException {
        ImageLlm llm = null;
        ImageRequest imageRequest = null;
        ImageResponse response = api.text2image(llm, imageRequest);
        // TODO: test validations
    }

}
